/*
 * Copyright (c) 2020 The ZMK Contributors
 * ...
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ { 
    behaviors {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
	    };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  '  |BSPC |
// |  ESC |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  /  |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |     |  ,  |  .  | GUI |
//                    | LALT|LCTRL| SPC |   | ENT | RSE  | lwr |
                        bindings = <
   &kp TAB &kp Q &kp W &kp F &kp P &kp B    &kp J  &kp L  &kp U &kp Y &kp APOS  &kp BSPC
   &kp ESC &kp A &kp R &kp S &kp T &rpi LEFT_SHIFT G  &kp M &kp N &kp E &kp I &kp O &kp FSLH
 &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &rpi LEFT_SHIFT K &kp H &trans &kp COMMA &kp DOT &kp LGUI
                  &kp LALT &kp LCTRL &kp SPACE &kp RET &mo 2 &mo 1
                        >;
                };
                wdadwa {
// -----------------------------------------------------------------------------------------
// |   F1   |  F2  |  F3  |  F4  |  F5   |  F6  |   |PSCRN| DEL | pgUp| pgDn| play |  VUP |
// |   F7   |  F8  |  F9  |  F10 |  F11  |  F12 |   | LFT | DWN |  UP | RGT | next | VDWN |
// |LSHFT |bt clear| LALT |   ^  |   %   |      |   |  @  |  #  |  \  |  ~  |      | HOME |
//                        | CAPS | LCTRL |  GUI |   |     |     |     |
                        bindings = <
    &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6    &kp PSCRN &kp DEL &kp PG_UP &kp PG_DN &kp C_PP &kp C_VOL_UP
    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp C_NEXT &kp C_VOL_DN
    &kp LSHFT &bt BT_CLR &kp LALT &kp CARET &kp PRCNT &trans    &kp AT &kp HASH &kp BSLH &kp TILDE &trans &kp HOME
                         &kp CAPS &kp LCTRL &kp LGUI    &trans &trans &trans
                        >;
                };

                layers {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  0  |  9  |  `  |
// | CTRL |  !  |  &  |  =  |  *  |  +  |   |  {  |  (  |  [  |  ;  |  :  |  "  | &kp STAR
// | SHFT |  $  |  ?  |  _  |  /  |  -  |   |  }  |  )  |  ]  |  <  |  >  |  |  |
//                    | LALT|LCTRL| SPC |   | ENT |     |     |
                        bindings = <
   &kp TAB &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N0 &kp N9 &kp GRAVE
   &kp LCTRL &kp EXCL &kp AMPS &kp EQUAL &mo 3 &kp PLUS &kp LBRC &kp LPAR &kp LBKT &kp SEMI &kp COLON &kp DQT
   &kp LSHFT &kp DLLR &kp QMARK &kp UNDER &kp FSLH &kp MINUS &kp RBRC &kp RPAR &kp RBKT &kp LT &kp GT &kp PIPE
                      &kp LALT &kp LCTRL &kp SPACE &kp RET &trans &trans
                        >;
                };

                symbols {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |  `  |
// |      |     |     |     |     |     |   |     |     |     |     |     |     |
// |      |     |     |     |     |     |   |     |     |     |     |     |     |
//                    | LALT|LCTRL| SPC |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp GRAVE
   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                      &kp LALT &kp LCTRL &kp SPACE &trans &trans &trans
                        >;
                };
        };
};
